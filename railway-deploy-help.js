#!/usr/bin/env node

console.log('üöÄ RAILWAY DEPLOY - SOLUCIONANDO PROBLEMA\n');

console.log('‚ùå PROBLEMA IDENTIFICADO:');
console.log('- Repository not found ou problema de autentica√ß√£o no GitHub\n');

console.log('üîß SOLU√á√ïES ALTERNATIVAS:\n');

console.log('1Ô∏è‚É£ OP√á√ÉO 1 - Deploy direto via Railway CLI:');
console.log('   railway login');
console.log('   railway link [seu-projeto-id]');
console.log('   railway up');

console.log('\n2Ô∏è‚É£ OP√á√ÉO 2 - Deploy via GitHub (recomendado):');
console.log('   a) Verificar se o reposit√≥rio existe no GitHub');
console.log('   b) Reautenticar no Git:');
console.log('      git config --global user.name "Seu Nome"');
console.log('      git config --global user.email "seu@email.com"');
console.log('   c) Tentar push novamente:');
console.log('      git push origin master');

console.log('\n3Ô∏è‚É£ OP√á√ÉO 3 - Usar Railway GitHub Integration:');
console.log('   a) Criar/atualizar reposit√≥rio no GitHub');
console.log('   b) Conectar Railway ao reposit√≥rio');
console.log('   c) Deploy autom√°tico ser√° ativado');

console.log('\nüéØ ARQUIVOS IMPORTANTES PARA O DEPLOY:');
console.log('‚úÖ Dockerfile criado');
console.log('‚úÖ .railwayignore criado'); 
console.log('‚úÖ Frontend build em /frontend/dist/');
console.log('‚úÖ PWA build em /pwa/dist/');
console.log('‚úÖ Backend em /backend/');

console.log('\nüîë VARI√ÅVEIS DE AMBIENTE NO RAILWAY:');
console.log('NODE_ENV=production');
console.log('PORT=3000 (autom√°tico)');
console.log('DATABASE_URL=(j√° configurado)');

console.log('\nüìù COMANDO PARA TESTE LOCAL:');
console.log('cd "e:\\Projetos\\NOVO" && npm start');

console.log('\nüåê ENDPOINTS AP√ìS DEPLOY:');
console.log('‚Ä¢ PWA: https://seu-app.up.railway.app/');
console.log('‚Ä¢ Admin: https://seu-app.up.railway.app/admin');
console.log('‚Ä¢ API: https://seu-app.up.railway.app/api');

const path = require('path');
const fs = require('fs');

// Verificar builds
const frontendBuild = fs.existsSync(path.join(__dirname, 'frontend', 'dist', 'index.html'));
const pwaBuild = fs.existsSync(path.join(__dirname, 'pwa', 'dist', 'index.html'));
const dockerfile = fs.existsSync(path.join(__dirname, 'Dockerfile'));

console.log('\n‚úÖ STATUS DOS ARQUIVOS:');
console.log(frontendBuild ? '‚úÖ Frontend build OK' : '‚ùå Frontend build FALTANDO');
console.log(pwaBuild ? '‚úÖ PWA build OK' : '‚ùå PWA build FALTANDO'); 
console.log(dockerfile ? '‚úÖ Dockerfile OK' : '‚ùå Dockerfile FALTANDO');

if (frontendBuild && pwaBuild && dockerfile) {
  console.log('\nüéâ TUDO PRONTO - apenas resolver o Git/Railway!');
} else {
  console.log('\n‚ö†Ô∏è Execute: node build-production.js');
}
